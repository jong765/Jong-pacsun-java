//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.30 at 06:38:40 PM PDT 
//


package com.hingeto.api;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ShippingModelUnits.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ShippingModelUnits">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="MM"/>
 *     &lt;enumeration value="CM"/>
 *     &lt;enumeration value="M"/>
 *     &lt;enumeration value="IN"/>
 *     &lt;enumeration value="FT"/>
 *     &lt;enumeration value="MM^3"/>
 *     &lt;enumeration value="CM^3"/>
 *     &lt;enumeration value="M^3"/>
 *     &lt;enumeration value="IN^3"/>
 *     &lt;enumeration value="FT^3"/>
 *     &lt;enumeration value="GR"/>
 *     &lt;enumeration value="KG"/>
 *     &lt;enumeration value="OZ"/>
 *     &lt;enumeration value="LB"/>
 *     &lt;enumeration value="n/a"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ShippingModelUnits")
@XmlEnum
public enum ShippingModelUnits {

    MM("MM"),
    CM("CM"),
    M("M"),
    IN("IN"),
    FT("FT"),
    @XmlEnumValue("MM^3")
    MM_3("MM^3"),
    @XmlEnumValue("CM^3")
    CM_3("CM^3"),
    @XmlEnumValue("M^3")
    M_3("M^3"),
    @XmlEnumValue("IN^3")
    IN_3("IN^3"),
    @XmlEnumValue("FT^3")
    FT_3("FT^3"),
    GR("GR"),
    KG("KG"),
    OZ("OZ"),
    LB("LB"),
    @XmlEnumValue("n/a")
    N_A("n/a");
    private final String value;

    ShippingModelUnits(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ShippingModelUnits fromValue(String v) {
        for (ShippingModelUnits c: ShippingModelUnits.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
